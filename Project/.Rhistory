age
age<-as.numeric(hospital$AGE)
hospital<-read.csv(file.choose(),header = TRUE)
age<-as.numeric(hospital$AGE)
age
group_by(age)
install.packages("dplyr")
library("dplyr")
group_by(age)
str(hospital)
as.numeric(hospital$AGE)
summary(hospital$AGE)
group_by(hospital$AGE)
group_by(hospital,AGE)
max(group_by(hospital,AGE))
df<-group_by(hospital$Age,hospital$TOTCHG)%>%
summarise(d=sum(hospital$TOTCHG))
group_by(hospital$Age,hospital$TOTCHG)
table(hospital$AGE)
df<-group_by(hospital,hospital$AGE)%>%
summarise(d=sum(hospital$TOTCHG))
df
group_by(hospital,hospital$AGE)
df
df<-group_by(hospital,hospital$AGE,hospital$TOTCHG)%>%
summarise(d=sum(hospital$TOTCHG))
df
df
tapply(hospital$AGE, hospital$TOTCHG, FUN=sum)
x<-group_by(hospital$AGE) %>%
summarise(totalcost=sum(hospital$TOTCHG))
x<-group_by(hospital,hospital$AGE) %>%
summarise(totalcost=sum(hospital$TOTCHG))
x
tapply(hospital$AGE, hospital$TOTCHG, FUN=sum)
aggregate(hospital$AGE, by=list(Category=hospital$TOTCHG), FUN=sum)
aggregate(hospital$AGE~hospital$TOTCHG,FUN=sum)
max(aggregate(hospital$AGE~hospital$TOTCHG,FUN=sum))
tapply(hospital$AGE, hospital$TOTCHG, FUN=sum)
aggregate(hospital$AGE, by=list(Category=hospital$TOTCHG), FUN=sum)
maX(tapply(hospital$AGE, hospital$TOTCHG, FUN=sum))
tapply(hospital$AGE, hospital$TOTCHG, FUN=sum)
x
DF<-data_frame(hospital$AGE,hospital$TOTCHG)
DF
DF<-group_by(hospital,hospital$AGE)%>%
summarise(num=n(),total=sum(hospital$TOTCHG))
DF
tapply(hospital$AGE, hospital$TOTCHG, FUN=sum)
x<-tapply(hospital$AGE, hospital$TOTCHG, FUN=sum)
x
hospital<-read.csv(file.choose(),header = TRUE)
head(hospital)
x<-group_by(hospital,hospital$AGE) %>%
summarise(totalcost=sum(hospital$TOTCHG))
x
x<-tapply(hospital$AGE, hospital$TOTCHG, FUN=sum)
x
aggregate(hospital$AGE, by=list(Category=hospital$TOTCHG), FUN=sum)
max(aggregate(hospital$AGE~hospital$TOTCHG,FUN=sum))
DF<-data_frame(hospital$AGE,hospital$TOTCHG)
DF
group_by(hospital,hospital$AGE)%>%
summarise(num=n(),total=sum(hospital$TOTCHG))
max(aggregate(hospital$AGE~hospital$TOTCHG,FUN=sum))
aggregate(hospital$AGE, by=list(Category=hospital$TOTCHG), FUN=sum)
aggregate(hospital$AGE~hospital$TOTCHG,FUN=sum)
max(aggregate(AGE~TOTCHG,FUN=sum,data=hospital))
max(aggregate(AGE~TOTCHG,FUN=sum,data=hospital))
aggregate(AGE~TOTCHG,FUN=sum,data=hospital)
max(aggregate(TOTCHG~age,FUN=sum,data=hospital))
aggregate(TOTCHG~age,FUN=sum,data=hospital)
aggregate(hospital$TOTCHG, by=list(Category=hospital$AGE), FUN=sum)
x<-tapply(hospital$TOTCHG, hospital$AGE, FUN=sum)
x
totalCost<-tapply(hospital$TOTCHG, hospital$AGE, FUN=sum)
totalCost
hospital<-read.csv(file.choose(),header = TRUE)
install.packages("dplyr")
library("dplyr")
plot(totalCost)
total<tapply(hospital$TOTCHG,hospital$APRDRG,FUN=sum)
total<-tapply(hospital$TOTCHG,hospital$APRDRG,FUN=sum)
total
hist(total)
summary(total)
sumary(hospital$APRDRG)
summary(hospital$APRDRG)
summary(hospital$TOTCHG)
summary(total)
which.max(summary(as.factor(hospital$APRDRG)))
summary(hospital$RACE)
table(hospital$RACE)
str(hospital$RACE)
complete.cases(hospital$RACE)
plot(complete.cases(hospital$RACE))
table(hospital$RACE)
str(hospital$RACE)
table(hospital$RACE)
summary(hospital$RACE)
x<-hospital$RACE[complete.cases(hospital$RACE),]
x<-hospital$RACE[complete.cases(hospital$RACE),]
str(hospital)
str(hospital)
hospitalRace<-as.factor(hospital$RACE)
summary(hospitalRace)
complete.cases(hospitalRace)
x<-hospital$RACE[complete.cases(hospitalRace),]
x<-hospitalRace[complete.cases(hospitalRace),]
summary(hospitalRace)
summary(hospitalRace)
xx <- c(15, 39, 18, 16, NA, 53)
temp.x <- remove.na(xx)
remove.na(xx)
names(hospital)
summary(hospitalRace)
plot(hospitalRace,hospital$TOTCHG)
install.packages("ggplot")
library("ggplot")
install.packages("ggplot2")
library("ggplot2")
xyplot(hospitalRace~hospital$TOTCHG)
cor(hospitalRace,hospital$TOTCHG)
str(hospital)
cor(hospital$Race,hospital$TOTCHG)
cor(as.numeric(hospital$Race),as.numeric(hospital$TOTCHG))
cor(as.numeric(hospital$TOTCHG),as.numeric(hospital$RACE))
cor(as.numeric(hospital$RACE),as.numeric(hospital$TOTCHG))
plot(hospitalRace,hospital$TOTCHG)
any(is.na(hospitalRace))
hospitalRace<-na.omit(hospitalRace)
hospitalRace<-na.omit(hospitalRace)
hospitalRace
summary(hospitalRace)
any(is.na(hospitalRace))
cor(hospitalRace,hospital$APRDRG)
cor(as.numeric(hospitalRace),as.numeric(hospital$APRDRG))
str(hospital)
?cor
cor(hospitalRace,hospital$APRDRG,na.rm=TRUE,use="complete.obs")
cor(hospitalRace,hospital$APRDRG,use="complete.obs")
cor(as.numeric(hospitalRace),hospital$APRDRG,use="complete.obs")
any(is.na(hospitalRace))
nrow(hospitalRace)
nrow(hospital$RACE)
nrow(hospital)
any(is.na(hospitalRace))
hospitalRace<-na.omit(hospitalRace)
hospitalRace
hospital<-na.omit(hospital)
any(is.na(hospital))
model<-aov(TOTCHG~RACE,data=hospital)
model
summary(model)
summary(hospital$RACE)
table(hospitalRace)
table(hospital$RACE)
model<-aov(TOTCHG~RACE,data=hospital)
model
summary(model)
table(hospital$RACE)
describe(hospital)
describe(hospital)
summary(hospital)
cor(hospital$TOTCHG,hospital$AGE*hospital$FEMALE)
model<-cor(hospital$TOTCHG,hospital$AGE*hospital$FEMALE)
summary(model)
model
cor(hospital)
cor(hospital)
model<-glm(TOTCHG ~ AGE+FEMALE,data=hospital)
summary(model)
model<-glm(TOTCHG ~ AGE+FEMALE,family=binomial,data=hospital)
summary(model)
glm(TOTCHG~AGE,data=hospital)
range[hospita$AGE]
range[hospital$AGE]
range(hospital$AGE)
xage<-seq(0,17,1)
yage<-predict(model,list(AGE=xage),type="reponse")
yage<-predict(model,list(AGE=xage),type="reponse")
yage<-predict(model,list(hospital$AGE=xage),type="reponse")
for(i in 100)
{
print(i)
if(i>20)
{break}
}
x <-3
switch(x, 2+2, mean(1:10), rnorm(5))
switch(x, 2+2, mean(1:10), rnorm(5))
2.2903605 2.3271663 -0.7060073 1.3622045 -0.2892720
mean(1:10)
rnorm(5)
x <-2
switch(2, 2+2, mean(1:10), rnorm(5))
switch(6, 2+2, mean(1:10), rnorm(5))
y <-"fruit"
switch(y, fruit ="banana", vegetable ="broccoli", "Neither")
centre <-function(x, type)
{
switch(type, mean=mean(x), median=median(x),  trimmed =mean(x, trim = .1))
}
x <-raunchy(10)
center(x, "mean")
centre <-function(x, type)
{
switch(type, mean=mean(x), median=median(x),  trimmed =mean(x, trim = .1))
}
x <-raunchy(10)
centre(x, "mean")
centre <-function(x, type)
{
switch(type, mean=mean(x), median=median(x),  trimmed =mean(x, trim = .1))
}
centre(10, "mean")
mean=mean(x)
mean
f<-function(num)
{ for(i inseq_len(num))
cat("Hello, world!\n")
}
f(3)
f<-function(num)
{ for(i inseq_len(num))
cat("Hello, world!\n")
}
f(3)
f<-function(num)
{ for(i in seq_len(num))
cat("Hello, world!\n")
}
f(3)
f<-function(num)
{
hello <-"Hello, world!\n"
for(i in seq_len(num))
{
cat(hello)
}
chars <-nchar(hello)* num + chars
}
meaningoflife <- f(3)
print(meaningoflife)
meaningoflife <- f(3)
f<-function(num)
{
hello <-"Hello, world!\n"
for(i in seq_len(num))
{
cat(hello)
}
chars <-nchar(hello)* num + chars
}
meaningoflife <- f(3)
print(meaningoflife)
meaningoflife <- f(3)
lm<-function(x)
{ x * x }
lm
g <-function(x){ a <-3 + x+a+y }
g(2)
g <-function(x){
a <-3
x+a+y
}
g(2)
g <-function(x,y)   2,3 2+3+3
{
a <-3
x+a+y
}
y <-3
g(2,y)
g <-function(x,y)
{
a <-3
x+a+y
}
y <-3
g(2,y)
nLL <- make.NegLogLik(normals, c(1, FALSE))
x <-1:4
x
y <-6:9
z <- x + y
z
x <-1:4
x >2
x <-matrix(1:4, 2, 2)
x
y <-matrix(rep(10, 4), 2, 2)
y
x * y
unclass(as.Date(“1970-01-02”))
as.Date(“1970-01-02”)
as.Date(“1970-01-02”)
as.Date("1970-01-02")
vec <- c(1,"hello",TRUE)
vec
a <-data.frame(x =rnorm(100), y =runif(100))
b <-c(3, 4.4, 1/3)
save.image(a,b,file="mydata.rda")
save(a,b,file="mydata.rda")
x <-1
print(x)
x <-6
class(x)
x <-0:6
as.logical(x)
x
sqrt(-17)
v <-3*x + y +1
x <-list(foo =1:4, bar =0.6)
x
x[[1]]
x[1]
x <-list(foo =1:4, bar =0.6, baz ="hello")
x
name <-"foo"
x$name
x <-list(foo =1:4, bar =0.6, baz ="hello")
x
name <-"foo"
x[[name]]
x <-list(a =list(10, 12, 14), b =c(3.14, 2.81))
x
x[[c(1, 3)]]
x <-list(aardvark =1:5)
x
x[["a", exact = FALSE]]
